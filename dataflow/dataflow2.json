{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sales_2015",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "sales_2016",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "sales_2017",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "products",
						"type": "DatasetReference"
					},
					"name": "product"
				},
				{
					"dataset": {
						"referenceName": "customer",
						"type": "DatasetReference"
					},
					"name": "customers"
				},
				{
					"dataset": {
						"referenceName": "territories",
						"type": "DatasetReference"
					},
					"name": "territory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdf2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "sales3yrs"
				},
				{
					"name": "salesallyrprod"
				},
				{
					"name": "select1"
				},
				{
					"name": "joinwithcustomer"
				},
				{
					"name": "joinwithterritories"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderDate as string,",
				"          StockDate as string,",
				"          OrderNumber as string,",
				"          ProductKey as string,",
				"          CustomerKey as string,",
				"          TerritoryKey as string,",
				"          OrderLineItem as string,",
				"          OrderQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          OrderDate as string,",
				"          StockDate as string,",
				"          OrderNumber as string,",
				"          ProductKey as string,",
				"          CustomerKey as string,",
				"          TerritoryKey as string,",
				"          OrderLineItem as string,",
				"          OrderQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          OrderDate as string,",
				"          StockDate as string,",
				"          OrderNumber as string,",
				"          ProductKey as string,",
				"          CustomerKey as string,",
				"          TerritoryKey as string,",
				"          OrderLineItem as string,",
				"          OrderQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          ProductKey as string,",
				"          ProductSubcategoryKey as string,",
				"          ProductSKU as string,",
				"          ProductName as string,",
				"          ModelName as string,",
				"          ProductDescription as string,",
				"          ProductColor as string,",
				"          ProductSize as string,",
				"          ProductStyle as string,",
				"          ProductCost as string,",
				"          ProductPrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> product",
				"source(output(",
				"          CustomerKey as string,",
				"          Prefix as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          BirthDate as string,",
				"          MaritalStatus as string,",
				"          Gender as string,",
				"          EmailAddress as string,",
				"          AnnualIncome as string,",
				"          TotalChildren as string,",
				"          EducationLevel as string,",
				"          Occupation as string,",
				"          HomeOwner as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customers",
				"source(output(",
				"          SalesTerritoryKey as string,",
				"          Region as string,",
				"          Country as string,",
				"          Continent as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> territory",
				"source1, source2, source3 union(byName: true)~> sales3yrs",
				"sales3yrs, product join(sales3yrs@ProductKey == product@ProductKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> salesallyrprod",
				"salesallyrprod select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, customers join(select1@CustomerKey == customers@CustomerKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithcustomer",
				"joinwithcustomer, territory join(TerritoryKey == SalesTerritoryKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithterritories",
				"joinwithterritories sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}